apply plugin: 'com.android.application'
apply from: project(':libaxmol').projectDir.toString() + "/axutils.gradle"

android {
    namespace "com.htsoftwarelabs.flappybird_zlsun_version"
    compileSdk PROP_COMPILE_SDK_VERSION.toInteger()

    // Setup native build tools: ndk & cmake
    def nbtInfo = axutils.findNativeBuildTools(project)
    ndkVersion = nbtInfo[0]
    if(nbtInfo[1]) {
        ndkPath = nbtInfo[1]
    }
    def cmakeVer = nbtInfo[2]
    def cmakeOptions = Eval.me(nbtInfo[3])

    defaultConfig {
        applicationId "com.htsoftwarelabs.flappybird_zlsun_version"
        minSdkVersion PROP_MIN_SDK_VERSION
        targetSdkVersion PROP_TARGET_SDK_VERSION
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                arguments "-DCMAKE_FIND_ROOT_PATH=", "-DANDROID_STL=c++_shared", "-DANDROID_TOOLCHAIN=clang", "-DANDROID_ARM_NEON=TRUE"
                arguments.addAll(cmakeOptions)
                cppFlags "-frtti -fexceptions -fsigned-char"
            }
        }

        ndk {
            abiFilters = []
            abiFilters.addAll(PROP_APP_ABI.split(':').collect{it as String})
        }
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "build/assets"
    }

    externalNativeBuild {
        cmake {
            version "$cmakeVer"
            path "../../CMakeLists.txt"
        }
    }

    signingConfigs {

       release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
        }

        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
        }
    }

    aaptOptions {
       noCompress 'mp3','ogg','wav','mp4','ttf','ttc'
    }
}

tasks.register("copyContentToAssets") {
    doFirst {
        delete "${projectDir}/build/assets"
    }
    doLast {
        copy {
            from "${projectDir}/../../Content"
            into "${projectDir}/build/assets"
            exclude "**/*.gz"
        }
        copy {
            from "${projectDir}/build/runtime/axslc"
            into "${projectDir}/build/assets/axslc"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':libaxmol')
}

project.afterEvaluate {
    android.applicationVariants.all { variant ->
        def variantName = variant.name.capitalize()
        if (tasks.findByName("externalNativeBuild${variantName}")) {
            copyContentToAssets.dependsOn tasks.getByName("externalNativeBuild${variantName}")
            tasks.getByName("compile${variantName}JavaWithJavac").dependsOn copyContentToAssets
        }
    }
}
